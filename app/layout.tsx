import "./globals.css";

import { getProductMKP, getProfile } from "./action";

import Footer from "@/components/layout/Footer";
import { HomeProvider } from "@/core/context/HomeContext";
import { LanguageProvider } from "@/core/context/LanguageContext";
import type { Metadata } from "next";
import Navigation from "@/components/layout/navigation/Navigation";
import ReduxProvider from "@/redux/Provider";
import { ThemeProvider } from "@/core/context/ThemeContext";
import { cookies } from "next/headers";
import { verifyToken } from "@/lib/auth";

export const metadata: Metadata = {
  title: "Home Page",
  description: "Generated by create next app",
  icons: {
    icon: "/images/logo.png",
    shortcut: "/images/logo.png",
    apple: "/images/logo.png",
  },
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const token = cookieStore.get("token")?.value;
  const renderPage = (
    value = {},
    products = {
      data: [],
      pagination: {
        currentPage: 0,
        totalPages: 0,
        totalProducts: 0,
      },
    }
  ) => (
    <html lang="en" className="dark">
      <body>
        <ReduxProvider>
          <LanguageProvider>
            <ThemeProvider>
              <div className="flex flex-col min-h-screen">
                {<Navigation user={value} />}
                {/* Main Content */}
                <main className="flex-1 pt-4 container mx-auto p-4">
                  <HomeProvider value={{ products }}>{children}</HomeProvider>
                </main>
                <Footer />
              </div>
            </ThemeProvider>
          </LanguageProvider>
        </ReduxProvider>
      </body>
    </html>
  );

  if (!token) {
    return renderPage();
  }
  const user = verifyToken(token);
  const userInfo = user ? await getProfile(user?._id) : {};
  const products = await getProductMKP();
  return renderPage(userInfo, products);
}
